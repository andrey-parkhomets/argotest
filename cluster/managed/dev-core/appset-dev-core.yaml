apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: appset-dev-core
spec:
  goTemplate: true
  # goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - matrix:
              generators:
              - clusters:
                  selector:
                    matchExpressions:
                    - {key: env, operator: In, values: [dev]}
                    - {key: color, operator: In, values: [green]}
              - list:
                  elements:
                  - appName: external-secrets
                    appChartRepoURL: https://github.com/andrey-parkhomets/argotest.git
                    apptargetRevision: HEAD
                    # chart: ''
                    namespace: kube-infra-vault
                    valueRepoURL: https://github.com/andrey-parkhomets/argotest.git
                    valuetargetRevision: HEAD
          - git:
              repoURL: https://github.com/andrey-parkhomets/argotest.git
              revision: HEAD
              files:
                - path: cluster/k8s-charts/{{.appName}}/config.json

  ignoreApplicationDifferences:
  - jsonPointers:
    - /spec/syncPolicy
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: appName
              operator: In
              values:
                - external-secrets
                - bla-bla
          maxUpdate: 1
        - matchExpressions:
            - key: appName
              operator: In
              values:
                - new-new
          maxUpdate: 1

  template:
    metadata:
      finalizers: []
      name: '{{.appName}}-{{.metadata.labels.env}}-{{.metadata.labels.color}}'
      labels:
        appName: '{{.appName}}'
        site: '{{.metadata.labels.site}}'
        env: '{{.metadata.labels.env}}'
        color: '{{.metadata.labels.color}}'
        autoSync: '{{.autoSync}}'
        imageTag: '{{(or .imageTag "latest")}}'
      annotations:
        team: '{{.metadata.annotations.team}}' # Use team annotation
    spec:
      project: project-dev-clusters
      sources:
        - repoURL: https://github.com/andrey-parkhomets/argotest.git
          # chart: '{{.chart}}'
          targetRevision: HEAD
          path: "cluster/k8s-charts/{{ .appName }}"
          helm:
            parameters:
              # - name: app.image.tag
              #   value: {{.Values.app.dev.green.image.tag | quote}}
              #   forceString: true
              # - name: app.commit.sha
              #   value: {{ .Values.app.dev.green.commit.sha | quote}}
              #   forceString: true
              - name: app.color
                value: "{{.metadata.labels.color}}" #color
                forceString: true
              - name: app.env
                value: "{{.metadata.labels.env}}" #env
                forceString: true
          #   releaseName: '{{.appName}}'
            valueFiles:
              - "$values/cluster/k8s-charts/{{.appName}}/values.yaml"
              - "$values/cluster/k8s-charts/{{.appName}}/values-{{.metadata.labels.env}}.yaml"
              - "$values/cluster/k8s-charts/{{.appName}}/values-{{.metadata.labels.env}}-{{.metadata.labels.color}}.yaml"
        - repoURL: https://github.com/andrey-parkhomets/argotest.git
          targetRevision: HEAD
          ref: values
      destination:
        # name: '{{.name}}'
        namespace: "{{ .namespace }}"
        server: https://kubernetes.default.svc

      syncPolicy:
        automated:
          prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
          selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
          allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
        syncOptions:
        - Retry=true
        - ApplyOutOfSyncOnly=true
        - FailOnSharedResource=true
        - CreateNamespace=true
        # - PrunePropagationPolicy=orphan
        managedNamespaceMetadata: # Sets the metadata for the application namespace. Only valid if CreateNamespace=true (see above), otherwise it's a no-op.
          labels: # The labels to set on the application namespace
            any: label
            you: like
          annotations: # The annotations to set on the application namespace
            the: same
            applies: for
            annotations: on-the-namespace
        retry:
          limit: 5 # Maximum number of retries
          backoff:
            duration: 5s # Initial retry interval
            factor: 2 # Multiplication factor for the backoff
            maxDuration: 1m # Maximum retry interval
  # syncPolicy:
    # Prevents ApplicationSet controller from modifying or deleting Applications
    # applicationsSync: create-only

    # Prevents ApplicationSet controller from deleting Applications. Update is allowed
    # applicationsSync: create-update

    # Prevents ApplicationSet controller from modifying Applications. Delete is allowed.
    # applicationsSync: create-delete
